# NOTE: There are some implicit "requires" in these macros, so you
# should start your SLS with:
#
# - include:
#   - kube-apiserver
#   - kubectl-config
#

#####################################################################

# a macro for running "kubectl" with retries, the "kubeconfig" and the
# right dependencies...

{% macro _kubectl_run(args) -%}
  caasp_cmd.run:
    - name: kubectl {{ kwargs.get('kubectl_args', '') }} --kubeconfig={{ pillar['paths']['kubeconfig'] }} {{ args }}
    - retry:
        attempts: 10
        interval: 1
    - require:
      - kube-apiserver
      - {{ pillar['paths']['kubeconfig'] }}
{%- if 'require' in kwargs %}
  {%- for r in kwargs['require'] %}
      - {{ r }}
  {%- endfor %}
{%- endif %}
{%- if 'watch' in kwargs %}
    - watch:
  {%- for w in kwargs['watch'] %}
      - {{ w }}
  {%- endfor %}
{%- endif %}
{%- if 'unless' in kwargs %}
    - unless:
       - {{ kwargs['unless'] }}
{%- endif %}
{%- if 'check_cmd' in kwargs %}
    - check_cmd:
       - {{ kwargs['check_cmd'] }}
{%- endif %}
{%- endmacro %}

#####################################################################

{% macro kubectl(name, args) -%}
{{ name }}:
  {{ _kubectl_run(args, **kwargs) }}
{%- endmacro %}

#####################################################################

{% macro kubectl_apply(manifest) -%}
{{ manifest }}:
  {{ _kubectl_run("apply -f " + manifest, **kwargs) }}
{% endmacro %}

#####################################################################

{% macro kubectl_apply_template(src, manifest) -%}
{{ manifest }}:
  file.managed:
    - name:        {{ manifest }}
    - source:      {{ src }}
    - template:    jinja
    - makedirs:    true
  {%- if 'require' in kwargs %}
    - require:
    {%- for r in kwargs['require'] %}
        - {{ r }}
    {%- endfor %}
  {%- endif %}
  {{ _kubectl_run("apply -f " + manifest,
                  watch=["file: " + manifest] + kwargs.pop('watch', []),
                  **kwargs) }}
    {#- make this idempotent by using a 'onchanges' on the file: #}
    {#- we don't run 'kubectl apply' unless the file changes     #}
    - onchanges:
      - file: {{ manifest }}
  {#- make sure we remove the manifest if something fails,     #}
  {#- so we could run kubectl again if we orchestrate again... #}
  cmd.run:      {#- cannot use file.absent to avoid duplicates #}
    - name: rm -f {{ manifest }}
    - onfail:
      - caasp_cmd: {{ manifest }}

{% endmacro %}
